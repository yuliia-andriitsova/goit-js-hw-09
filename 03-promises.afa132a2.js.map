{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEcC,SAASC,cAAc,kBAArC,MACMC,EAAOF,SAASC,cAAc,iBAG9BE,GAFSH,SAASC,cAAc,mBACpBD,SAASC,cAAc,WAC5BD,SAASC,cAAc,UA8BpC,SAASG,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,CAACC,EAASC,KAC3BC,YAAW,KACaC,KAAKC,SAAW,GAEpCJ,EAAQ,C,SAAEH,EAAUQ,MAAAP,IAEpBG,EAAO,C,SAAEJ,EAAUQ,MAAAP,MAEpBA,MArCPQ,QAAQC,IAAIb,GAEZC,EAAKa,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBACN,MAAQC,OAAAC,EAAQC,KAAAC,EAAMT,MAAAU,GAAUN,EAAMO,OAAOC,SAC7C,IAAIC,EAAYC,OAAOP,EAAOQ,OAC1BC,EAAWF,OAAOJ,EAAMK,OACxBE,EAAUH,OAAOL,EAAKM,OAE1B,IAAK,IAAIG,EAAQ,EAAGA,EAAQL,EAAWK,GAAS,EAC9C3B,EAAc2B,EAAQ,EAAGF,GACtBG,MAAK,EAAC3B,SAAEA,EAAUQ,MAAAoB,MACjBC,EAAApC,GAASqC,OAAOC,QACd,uBAAqB/B,QAAiB4B,UAIzCI,OAAM,EAAChC,SAAEA,EAAUQ,MAAAyB,MAClBJ,EAAApC,GAASqC,OAAOI,QACd,sBAAoBlC,QAAeiC,UAGzCT,GAAYC","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst btnSubmit = document.querySelector('.button');\nconst form = document.querySelector('.form');\n\nconsole.log(step);\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const { amount, step, delay } = event.target.elements;\n  let amountVal = Number(amount.value);\n  let delayVal = Number(delay.value);\n  let stepVal = Number(step.value);\n\n  for (let index = 0; index < amountVal; index += 1) {\n    createPromise(index + 1, delayVal)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayVal += stepVal;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$eWCmQ","parcelRequire","document","querySelector","$47d4ff9957288465$var$step","$47d4ff9957288465$var$form","$47d4ff9957288465$var$createPromise","position","delay4","Promise","resolve","reject","setTimeout","Math","random","delay","console","log","addEventListener","event","preventDefault","amount","amount1","step","step1","delay1","target","elements","amountVal","Number","value","delayVal","stepVal","index","then","delay2","$parcel$interopDefault","Notify","success","catch","delay3","failure"],"version":3,"file":"03-promises.afa132a2.js.map"}