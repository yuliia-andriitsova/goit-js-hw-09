{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAGMC,GADQC,SAASC,cAAc,kBACxBD,SAASC,cAAc,kBAG9BC,GAFSF,SAASC,cAAc,mBACpBD,SAASC,cAAc,WAC5BD,SAASC,cAAc,UA8BpC,SAASE,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3BC,YAAW,WACaC,KAAKC,SAAW,GAEpCJ,EAAQ,CAAEH,WAAUQ,MAAAP,IAEpBG,EAAO,CAAEJ,WAAUQ,MAAAP,MAEpBA,MArCPQ,QAAQC,IAAIf,GAEZG,EAAKa,iBAAiB,UAEtB,SAAkBC,GAChBA,EAAMC,iBAMN,IALA,IAAgCC,EAAAF,EAAMG,OAAOC,SAArCC,EAAwBH,EAAxBI,OAAQC,EAAgBL,EAAhBM,KAAMC,EAAUP,EAAVN,MAClBc,EAAYC,OAAON,EAAOO,OAC1BC,EAAWF,OAAOF,EAAMG,OACxBE,EAAUH,OAAOJ,EAAKK,OAEjBG,EAAQ,EAAGA,EAAQL,EAAWK,GAAS,EAC9C5B,EAAc4B,EAAQ,EAAGF,GACtBG,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAU8B,EAAKD,EAALrB,MACjBuB,EAAAtC,GAASuC,OAAOC,QACd,uBAAwCC,OAAflC,EAAS,QAAYkC,OAANJ,EAAM,UAIjDK,OAAM,SAAAN,G,IAAG7B,EAAQ6B,EAAR7B,SAAUoC,EAAKP,EAALrB,MAClBuB,EAAAtC,GAASuC,OAAOK,QACd,sBAAqCH,OAAflC,EAAS,QAAYkC,OAANE,EAAM,UAGjDX,GAAYC,K","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst delay = document.querySelector('[name=\"delay\"]');\nconst step = document.querySelector('[name=\"step\"]');\nconst amount = document.querySelector('[name=\"amount\"]');\nconst btnSubmit = document.querySelector('.button');\nconst form = document.querySelector('.form');\n\nconsole.log(step);\n\nform.addEventListener('submit', onSubmit);\n\nfunction onSubmit(event) {\n  event.preventDefault();\n  const { amount, step, delay } = event.target.elements;\n  let amountVal = Number(amount.value);\n  let delayVal = Number(delay.value);\n  let stepVal = Number(step.value);\n\n  for (let index = 0; index < amountVal; index += 1) {\n    createPromise(index + 1, delayVal)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(\n          `✅ Fulfilled promise ${position} in ${delay}ms`\n        );\n      })\n\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(\n          `❌ Rejected promise ${position} in ${delay}ms`\n        );\n      });\n    delayVal += stepVal;\n  }\n}\n\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      const shouldResolve = Math.random() > 0.3;\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n}\n"],"names":["$iU1Pc","parcelRequire","$ce04d3a99e08e73b$var$step","document","querySelector","$ce04d3a99e08e73b$var$form","$ce04d3a99e08e73b$var$createPromise","position","delay4","Promise","resolve","reject","setTimeout","Math","random","delay","console","log","addEventListener","event","preventDefault","_elements","target","elements","amount1","amount","step1","step","delay1","amountVal","Number","value","delayVal","stepVal","index","then","param","delay2","$parcel$interopDefault","Notify","success","concat","catch","delay3","failure"],"version":3,"file":"03-promises.632aa845.js.map"}